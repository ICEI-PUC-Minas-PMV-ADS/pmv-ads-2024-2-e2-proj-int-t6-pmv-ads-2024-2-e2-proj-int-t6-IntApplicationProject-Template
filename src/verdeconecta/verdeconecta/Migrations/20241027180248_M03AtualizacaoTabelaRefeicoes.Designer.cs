// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using verdeconecta.Models;

#nullable disable

namespace verdeconecta.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241027180248_M03AtualizacaoTabelaRefeicoes")]
    partial class M03AtualizacaoTabelaRefeicoes
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("verdeconecta.Models.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AlimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("calorias")
                        .HasColumnType("real");

                    b.Property<float>("carboidratos")
                        .HasColumnType("real");

                    b.Property<float>("fibras")
                        .HasColumnType("real");

                    b.Property<float>("gorduras")
                        .HasColumnType("real");

                    b.Property<int>("gramas")
                        .HasColumnType("int");

                    b.Property<float>("proteinas")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.ToTable("Alimento");
                });

            modelBuilder.Entity("verdeconecta.Models.Refeicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Calorias")
                        .HasColumnType("real");

                    b.Property<float>("Carboidratos")
                        .HasColumnType("real");

                    b.Property<DateTime>("DataDaRefeicao")
                        .HasColumnType("datetime2");

                    b.Property<float>("Fibras")
                        .HasColumnType("real");

                    b.Property<float>("Gorduras")
                        .HasColumnType("real");

                    b.Property<float>("Proteinas")
                        .HasColumnType("real");

                    b.Property<int>("TipoRefeicao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Refeicao");
                });

            modelBuilder.Entity("verdeconecta.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Altura")
                        .HasColumnType("real");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("verdeconecta.Models.Alimento", b =>
                {
                    b.HasOne("verdeconecta.Models.Refeicao", null)
                        .WithMany("Alimentos")
                        .HasForeignKey("AlimentoId");
                });

            modelBuilder.Entity("verdeconecta.Models.Refeicao", b =>
                {
                    b.Navigation("Alimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
